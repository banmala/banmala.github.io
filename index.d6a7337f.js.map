{"mappings":"ACCA,OAAO,MAAM,CAAC,KACZ,IACA,kBACF,EACA,MAAM,EAAe,KACnB,IAAM,EAAa,SAAS,aAAa,CAAC,gBACpC,EAAU,SAAS,aAAa,CAAC,gBACjC,EAAW,SAAS,gBAAgB,CAAC,kBAY3C,SAAS,IACF,EAAQ,SAAS,CAAC,QAAQ,CAAC,UAC1B,EAAW,KAAK,EAExB,CACA,EAAW,gBAAgB,CAAC,QAf5B,WACK,EAAQ,SAAS,CAAC,QAAQ,CAAC,UAC5B,EAAQ,SAAS,CAAC,MAAM,CAAC,SACzB,EAAQ,SAAS,CAAC,GAAG,CAAC,YAEtB,EAAQ,SAAS,CAAC,MAAM,CAAC,UACzB,EAAQ,SAAS,CAAC,GAAG,CAAC,SAE1B,GAQA,EAAS,OAAO,CAAE,AAAA,GAAQ,EAAK,gBAAgB,CAAC,QAAS,GAC3D,EAEA,iBAAmB,KACjB,IAAI,EAAY,SAAS,aAAa,CAAC,uBACnC,EAAgB,SAAS,aAAa,CAAC,qBACvC,EAAe,SAAS,aAAa,CAAC,qBACtC,EAAsB,SAAS,aAAa,CAAC,2BAC7C,EAAqB,SAAS,aAAa,CAAC,2BAC5C,EAAqB,SAAS,cAAc,CAAC,uBACjD,GAAG,AAAC,GAAc,GAAiB,GAAkB,GAAuB,GAAwB,EAE/F,CACH,IAAM,EAAa,EAAU,iBAAiB,CACxC,EAAa,EAAU,UAAU,CAAC,EAAE,CAAC,qBAAqB,GAAG,KAAK,CAAC,GACnE,EAAiB,EAAmB,qBAAqB,GAAG,KAAK,CACjE,EAAc,EAAa,EAGjC,SAAS,IACP,IAAI,EAAsB,EAAU,KAAK,CAAC,IAAI,CAAG,WAAW,EAAU,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,KAAM,KAAO,EAClG,EAAmB,EACnB,EAAa,EAAc,KAAK,GAAG,CAAC,GAAuB,CAC3D,CAAA,EAAc,GAAkB,EAAa,EAC/C,EAAmB,EAAsB,EACjC,EAAc,GACtB,CAAA,EAAmB,EAAsB,CADrC,EAGN,EAAU,KAAK,CAAC,IAAI,CAAG,CAAC,EAAE,EAAiB,EAAE,CAAC,AAChD,CACA,SAAS,IACP,IAAI,EAAsB,EAAU,KAAK,CAAC,IAAI,CAAG,WAAW,EAAU,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,KAAM,KAAO,EAEpG,iBADC,KAAK,GAAG,CAAC,GAAqB,EACZ,EAAsB,EAEtB,EAAsB,KAAK,GAAG,CAAC,GAEpD,EAAU,KAAK,CAAC,IAAI,CAAG,CAAC,EAAE,iBAAiB,EAAE,CAAC,AAChD,CArBA,EAAU,KAAK,CAAC,KAAK,CAAG,CAAC,EAAE,EAAY,EAAE,CAAC,CAC1C,EAAU,KAAK,CAAC,IAAI,CAAG,MAqBvB,EAAc,gBAAgB,CAAC,QAAS,GACxC,EAAa,gBAAgB,CAAC,QAAS,GACvC,EAAoB,gBAAgB,CAAC,QAAS,GAC9C,EAAmB,gBAAgB,CAAC,QAAS,EAC/C,MAhCE,QAAQ,IAAI,CAAC,4FAkCjB","sources":["<anon>","src/style/script.js"],"sourcesContent":["// Toggle Navbar\nwindow.onload = ()=>{\n    toggleNavbar();\n    controlledSlider();\n};\nconst toggleNavbar = ()=>{\n    const navToggler = document.querySelector(\"#nav-toggler\");\n    const navMenu = document.querySelector(\"#mobile-menu\");\n    const navLinks = document.querySelectorAll(\"#mobile-menu a\");\n    // togglerClick function\n    function togglerClick() {\n        if (navMenu.classList.contains(\"block\")) {\n            navMenu.classList.remove(\"block\");\n            navMenu.classList.add(\"hidden\");\n        } else {\n            navMenu.classList.remove(\"hidden\");\n            navMenu.classList.add(\"block\");\n        }\n    }\n    // navLinkClick function\n    function navLinkClick() {\n        if (navMenu.classList.contains(\"block\")) navToggler.click();\n    }\n    navToggler.addEventListener(\"click\", togglerClick);\n    navLinks.forEach((elem)=>elem.addEventListener(\"click\", navLinkClick));\n};\ncontrolledSlider = ()=>{\n    let sliderBox = document.querySelector(\"#testimonial-slider\");\n    let tapToRightBtn = document.querySelector(\"#testimonial_next\");\n    let tapToLeftBtn = document.querySelector(\"#testimonial_prev\");\n    let tapToRightBtn_small = document.querySelector(\"#testimonial_next_small\");\n    let tapToLeftBtn_small = document.querySelector(\"#testimonial_prev_small\");\n    let testimonialGallery = document.getElementById(\"testimonial-gallery\");\n    if (!sliderBox || !tapToLeftBtn || !tapToRightBtn || !tapToLeftBtn_small || !tapToRightBtn_small || !testimonialGallery) console.warn(\"Some div with given Ids not found. So, couldnot initialize slider in testimonial section.\");\n    else {\n        const childCount = sliderBox.childElementCount;\n        const slideWidth = sliderBox.childNodes[1].getBoundingClientRect().width + 30;\n        const containerWidth = testimonialGallery.getBoundingClientRect().width;\n        const sliderWidth = childCount * slideWidth;\n        sliderBox.style.width = `${sliderWidth}px`;\n        sliderBox.style.left = \"0px\";\n        function sliderNext() {\n            let currentLeftPosition = sliderBox.style.left ? parseFloat(sliderBox.style.left.replace(\"px\", \"\")) : 0;\n            let nextLeftPosition1 = currentLeftPosition;\n            let shiftValue = sliderWidth - Math.abs(currentLeftPosition) - containerWidth;\n            if (sliderWidth > containerWidth && shiftValue > slideWidth) nextLeftPosition1 = currentLeftPosition - slideWidth;\n            else if (sliderWidth > containerWidth) nextLeftPosition1 = currentLeftPosition - shiftValue;\n            sliderBox.style.left = `${nextLeftPosition1}px`;\n        }\n        function sliderPrev() {\n            let currentLeftPosition = sliderBox.style.left ? parseFloat(sliderBox.style.left.replace(\"px\", \"\")) : 0;\n            if (Math.abs(currentLeftPosition) > slideWidth) nextLeftPosition = currentLeftPosition + slideWidth;\n            else nextLeftPosition = currentLeftPosition + Math.abs(currentLeftPosition);\n            sliderBox.style.left = `${nextLeftPosition}px`;\n        }\n        tapToRightBtn.addEventListener(\"click\", sliderNext);\n        tapToLeftBtn.addEventListener(\"click\", sliderPrev);\n        tapToRightBtn_small.addEventListener(\"click\", sliderNext);\n        tapToLeftBtn_small.addEventListener(\"click\", sliderPrev);\n    }\n};\n\n//# sourceMappingURL=index.d6a7337f.js.map\n","// Toggle Navbar\nwindow.onload=()=>{\n  toggleNavbar();\n  controlledSlider();\n}\nconst toggleNavbar = () => {\n  const navToggler = document.querySelector('#nav-toggler');\n  const navMenu = document.querySelector('#mobile-menu');\n  const navLinks = document.querySelectorAll('#mobile-menu a');\n  // togglerClick function\n  function togglerClick() {\n    if(navMenu.classList.contains('block')) {\n      navMenu.classList.remove('block');\n      navMenu.classList.add('hidden');\n    }else{\n      navMenu.classList.remove('hidden');\n      navMenu.classList.add('block');\n    }\n  }\n  // navLinkClick function\n  function navLinkClick() {\n      if(navMenu.classList.contains('block')) {\n          navToggler.click();\n      }\n  }\n  navToggler.addEventListener('click', togglerClick);\n  navLinks.forEach( elem => elem.addEventListener('click', navLinkClick));\n}\n\ncontrolledSlider = () => {\n  let sliderBox = document.querySelector('#testimonial-slider');\n  let tapToRightBtn = document.querySelector('#testimonial_next');\n  let tapToLeftBtn = document.querySelector('#testimonial_prev');\n  let tapToRightBtn_small = document.querySelector('#testimonial_next_small');\n  let tapToLeftBtn_small = document.querySelector('#testimonial_prev_small');\n  let testimonialGallery = document.getElementById(\"testimonial-gallery\");\n  if(!sliderBox || !tapToLeftBtn || !tapToRightBtn || !tapToLeftBtn_small || !tapToRightBtn_small || !testimonialGallery){\n    console.warn(\"Some div with given Ids not found. So, couldnot initialize slider in testimonial section.\")\n  }else{\n    const childCount = sliderBox.childElementCount;\n    const slideWidth = sliderBox.childNodes[1].getBoundingClientRect().width+30;\n    const containerWidth = testimonialGallery.getBoundingClientRect().width;\n    const sliderWidth = childCount * slideWidth;\n    sliderBox.style.width = `${sliderWidth}px`;\n    sliderBox.style.left = '0px';\n    function sliderNext() {\n      let currentLeftPosition = sliderBox.style.left ? parseFloat(sliderBox.style.left.replace('px', '')) : 0;\n      let nextLeftPosition = currentLeftPosition;\n      let shiftValue = sliderWidth - Math.abs(currentLeftPosition) - containerWidth;\n      if( sliderWidth > containerWidth && shiftValue > slideWidth ){\n        nextLeftPosition = currentLeftPosition - slideWidth;\n      }else if( sliderWidth > containerWidth ){\n        nextLeftPosition = currentLeftPosition - shiftValue;\n      }\n      sliderBox.style.left = `${nextLeftPosition}px`;\n    }\n    function sliderPrev() {\n      let currentLeftPosition = sliderBox.style.left ? parseFloat(sliderBox.style.left.replace('px', '')) : 0;\n      if(Math.abs(currentLeftPosition)>slideWidth){\n        nextLeftPosition = currentLeftPosition + slideWidth;\n      }else{\n        nextLeftPosition = currentLeftPosition + Math.abs(currentLeftPosition);\n      }\n      sliderBox.style.left = `${nextLeftPosition}px`;\n    }\n    tapToRightBtn.addEventListener('click', sliderNext);\n    tapToLeftBtn.addEventListener('click', sliderPrev);\n    tapToRightBtn_small.addEventListener('click', sliderNext);\n    tapToLeftBtn_small.addEventListener('click', sliderPrev);\n  }\n\n}"],"names":["window","onload","toggleNavbar","controlledSlider","navToggler","document","querySelector","navMenu","navLinks","querySelectorAll","navLinkClick","classList","contains","click","addEventListener","remove","add","forEach","elem","sliderBox","tapToRightBtn","tapToLeftBtn","tapToRightBtn_small","tapToLeftBtn_small","testimonialGallery","getElementById","childCount","childElementCount","slideWidth","childNodes","getBoundingClientRect","width","containerWidth","sliderWidth","sliderNext","currentLeftPosition","style","left","parseFloat","replace","nextLeftPosition1","shiftValue","Math","abs","sliderPrev","nextLeftPosition","console","warn"],"version":3,"file":"index.d6a7337f.js.map"}